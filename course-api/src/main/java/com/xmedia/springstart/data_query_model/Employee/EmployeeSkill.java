package com.xmedia.springstart.data_query_model.Employee;

import java.io.Serializable;

import com.ligerdev.appbase.utils.db.AntTable;
import com.ligerdev.appbase.utils.db.AntColumn;


/*
	- 31/07/2019 20:23:43: Generated by sql
	select e.name, e.email, s.name from employee e join skills_employees se on e.id = se.employees_id join skill s on s.id = se.skills_id
*/
@AntTable(catalog = "xtel.management", name = "EmployeeSkill", label = "EmployeeSkill", key = "")
public class EmployeeSkill implements Serializable, Cloneable {

    private String employeeName;
    private String email;
    private String skillName;

    public EmployeeSkill() {
    }

    public EmployeeSkill(String employeeName, String email, String skillName) {
        this();
        this.employeeName = employeeName;
        this.email = email;
        this.skillName = skillName;
    }

    @AntColumn(name = "employeeName", size = 45, label = "employeeName")
    public void setEmployeeName(String employeeName) {
        this.employeeName = employeeName;
    }

    @AntColumn(name = "employeeName", size = 45, label = "employeeName")
    public String getEmployeeName() {
        return this.employeeName;
    }

    @AntColumn(name = "email", size = 45, label = "email")
    public void setEmail(String email) {
        this.email = email;
    }

    @AntColumn(name = "email", size = 45, label = "email")
    public String getEmail() {
        return this.email;
    }

    @AntColumn(name = "skillName", size = 45, label = "skillName")
    public void setSkillName(String skillName) {
        this.skillName = skillName;
    }

    @AntColumn(name = "skillName", size = 45, label = "skillName")
    public String getSkillName() {
        return this.skillName;
    }

    @Override
    public String toString() {
        return "["
                + "employeeName=" + employeeName
                + ", email=" + email
                + ", skillName=" + skillName
                + "]";
    }

    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }
}